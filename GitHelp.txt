git init 		- Инициализируем папку для работы с гитом

git add			- Добавляем файлы которые хотим закоммитить в отслеживаемую зону
	. 	 - Добавить все файлы в текущей папке
	*.java 	 - Добавить все файлы в текущей папке с расширением .java
	someDir/ - Добавить все файлы в папке someDir
	"*.java" - Добавить все файлы в проекте с расширением .java

git commit 		- Коммитим добавленные файлы в локальный репозиторий
	-m "Здесь пишим сообщение к коммиту"
	-a -m "Сообщение" выполнит добавление в отслеживаемую зону и в коммит модифицированных файлов, 
	но не тех, который добавлены с новым именем.
	-- amend -m "Сообщение"  Дополняет последний коммит новыми изменениями, переписывая его.

git log			- Показывает историю коммитов
	q - Выйти из длинного лога

git status		- Узнать статус репозитория

git diff		- Показывает разницу между текущим неотслеживаемым состоянием репозитория
			и последним снимком репозитория
	-staged   Разница между текущим отслеживаемым и последним снимком репозитория
	COMMID_ID Разница между текущим состоянием репозитория и указанным снимком

git reset		- ПРЕДНАЗНАЧЕНА ДЛЯ ОТМЕНЫ КАКИХ-ЛИБО ИЗМЕНЕНИЙ В ПРОЕКТЕ, ОТКАТУ К СНИМКУ. 
			HEAD - указатель на текущую версию проекта, его можно смещать.
	HEAD^ (~n)	Сместить указатель на 1 (^^ 2... ~n) коммит назад
	(--soft|--mixed|--hard) [commit] (в commit указываем хеш или вариации с HEAD к какому коммиту хотим вернуться)
		--hard  Возвращает проект к указанному коммиту и УДАЛЯЕТ все коммиты после указанного БЕЗВОЗВРАТНО
		--mixed Возвращает у указанному коммиту и переводит все следующие в НЕотслеживаемую зону
		Чтобы их вернуть в отслеживаемую зону нужно сделать git add и git commit
		--soft  Возвращает у указанному коммиту и переводит все следующие в отслеживаемую зону
		reset --hard не удаляет неотслеживаемые файлы		

		При вызове без указания параметра используется --mixed.
		При вызове без указания коммита используется HEAD. Вернуться к последнему.

git checkout		- ИСПОЛЬЗУЕТСЯ ДЛЯ ПЕРЕМЕЩЕНИЯ МЕЖДУ КОММИТАМИ, ВЕРСИЯМИ ОТДЕЛЬНЫХ ФАЙЛОВ И ВЕТКАМИ
			После выполнения команды с HEAD^ или (хэш) состояние проекта полностью вернется к указанному
			снимку. Коммиты не удаляются. Всегда можем перенестить в актуальную версию.
			Любые изменения или коммиты, сделанные в этом состоянии, удаляются сборщиком муссора 
			при переходе к другому коммиту. (Указатель HEAD в состоянии DETACHED (отделенный))
	-master (или нужной ветки) - переход к актуальному коммиту

	-(указатель)HEAD^ --file1 file2 Вернет файл 1 и 2 к версии, которая сохранена у указанном коммите(указатель)
	--. вернет все файлы в репозитории к последнему коммиту
		
		Если хотим удалить отслеживаемые изменения, но не закоммиченные (git add)
		Делаем git reset - перевод всех отслеживаемых изменений в неотслеживаемые
		И далее git checkout --. удалит все неотслеживаемые изменения

	Если не ставим --, то git воспринимает следующее как ключевые слова (если они есть). -- команда закончилась и идет текст.

git clean		- ПОЗВОЛЯЕТ УДАЛЯТЬ НЕОТСЛЕЖИВАЕМЫЕ ФАЙЛЫ ИЗ РЕПОЗИТОРИЯ
	-n Покажет какие файлы будут удалены, но не удалит их
	-f Удалит файлы.

git remote		- НАСТРОЙКА И ПРОСМОТР УДАЛЕННЫХ РЕПОЗИТОРИЕВ
	- v	просмотр списка существующих удаленных репозиториев
	add НАЗВАНИЕ_РЕП АДРЕС_РЕП	Добавить новый удаленный репозиторий
	remove НАЗВАНИЕ_РЕП удалить репозиторий с указанным названием

git push		- КОМАНДА ДЛЯ ОТПРАВКИ ЛОКАЛЬНОГО РЕПОЗИТОРИЯ НА УДАЛЕЕННЫЙ
	НАЗВАНИЕ_УДАЛ_РЕП ВЕТКА (git push origin master)

git pull		- ВЫТЯНУТЬ С УДАЛЕННОГО РЕПОЗИТОРИЯ










































